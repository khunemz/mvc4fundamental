@model IEnumerable<Vid.Models.Video>
<div id="videoTableOutput">

</div>

<button id="createVideo">Create video</button>

<div id="videoEditOutput">
    
</div>

<script id="videoTable" type="text/html">
    <table>
        <thead>
        <tr>
            <th>Title</th>
            <th>Length</th>
            <th></th>
        </tr>
        </thead>

        <tbody>
        {{#each video}}
        <tr data-id={{Id}}>
            <td>{{Title}}</td>
            <td>{{Length}}</td>
            <td>
                <button class="editVideo">Edit</button>
                <button class="deleteVideo">Delete</button>
            </td>
        </tr>
        {{/each}}
        </tbody>
    </table>

</script>

<script id="videoEdit" type="text/html">
    <hr/>
    <form>
        <input name="hidden" type="hidden" id="id" value="{{Id}}" />
        <label>Title</label>
        <input id="title" name="title" type="text" value="{{Title}}" />
        <label>Length</label>
        <input name="length" type="number" min="0" max="200" id="length" value="{{Length}}" />
        <label></label>
        <input type="submit" id="saveVideo" value="saveVideo" />
    </form>
</script>

@section scripts
{
    <script src="~/Scripts/handlebars.min.js"></script>
    <script>
        var videoServer = (function() {
            var videoUrl = '@Url.RouteUrl("DefaultApi", new {httproute = "", controller = "Videos"})';

            $(document).ajaxError(function(event, xhr) {
                console.log(xhr.status + ":" + xhr.statusText);
            });

            var getVideos = function() {
                return $.ajax(videoUrl);

            };

            var getVideo = function(id) {
                return $.ajax(videoUrl + "/" + id);
            };

            var updateVideo = function(video) {

                return $.ajax(videoUrl + "/" + video.Id, {
                    type: "PUT",
                    data: video
                });
            };

            var addVideo = function(video) {
                return $.ajax(videoUrl, {
                    type: "POST",
                    data: video
                });
            }

            var confirm = function() {
                var conf = confirm("Are you sure?");
                if (conf) {
                    return true;
                }
                return false;
            }

            var deleteVideo = function(id) {
                return $.ajax(videoUrl + "/" + id, {
                    type: "DELETE"
                });
                
            };

            return {
                getVideos: getVideos,
                getVideo: getVideo,
                updateVideo: updateVideo,
                addVideo: addVideo,
                deleteVideo: deleteVideo
            };

        }());


        (function() {
            var templates = {
            
            };

            // helper function
            var getId = function(element) {
                return $(element).parents("tr").attr("data-id");
            };
            

            var compileTemplates = function() {
                templates.videoTable = Handlebars.compile($("#videoTable").html());
                templates.videoEdit = Handlebars.compile($("#videoEdit").html());
            };

            var showAllVideos = function(data) {
                var output = templates.videoTable({ video: data });
                $("#videoTableOutput").html(output);
            };

            var refreshVideos = function() {
                videoServer.getVideos().done(showAllVideos);
            };

            var showVideoForEdit = function(video) {

                var output = templates.videoEdit(video);
                $("#videoEditOutput").html(output);
            }

            var editVideo = function() {

                var id = getId(this);
                videoServer.getVideo(id).done(showVideoForEdit);
            };

            var createVideo = function() {
                var video = { Id: 0, Title: "", Length: 0 };
                showVideoForEdit(video);

            };

            var clearEdit = function() {
                $("#videoEditOutput").empty();
            };

            var deleteVideo = function(id) {
                var ID = getId(this);
                videoServer.deleteVideo(ID).done(refreshVideos);
            };

            var saveVideo = function() {
                var video = {
                    "Id": $("#id").val(),
                    "Title": $("#title").val(),
                    "Length": $("#length").val()
                };

                var operation;
                if (video.Id != 0) {
                    operation = videoServer.updateVideo(video);
                } else {
                    operation = videoServer.addVideo(video);
                }
                operation.done(refreshVideos, clearEdit);
                return false; // prevent to redirect
            };

            var wireEvents = function() {
                $(document).on("click", ".editVideo", editVideo);
                $(document).on("click", "#saveVideo", saveVideo);
                $(document).on("click", "#createVideo", createVideo);
                $(document).on("click", ".deleteVideo", deleteVideo);
            };

            (function() {
                wireEvents();
                compileTemplates();
                refreshVideos();
            }());
        }());
    </script>
}